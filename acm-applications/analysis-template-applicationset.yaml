apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: deploy-analysis-templates
  namespace: openshift-gitops # ApplicationSets typically reside in the Argo CD namespace
spec:
  generators:
  - clusters:
      selector:
        matchExpressions:
          - key: environment
            operator: In
            values:
              - int
              - stage
              - prod
      values:
        cluster_name: "{{name}}"
        env_label_value: "{{metadata.labels.environment}}" # Useful for debugging/naming
  template:
    metadata:
      # The name of the generated Argo CD Application.
      # It will be dynamically named based on the cluster found by the generator.
      # Example: 'analysis-templates-web-app-health-check-int-cluster-name'
      name: 'analysis-templates-{{name}}'
      namespace: openshift-gitops # Argo CD Applications generated by ApplicationSets are often in the Argo CD namespace
    spec:
      project: default # The Argo CD project for this application

      source:
        repoURL: 'https://github.com/minlei98/example-rollouts.git' # Your Git repository
        targetRevision: HEAD # Or a specific branch/tag for stable analysis templates
        # This path points to the directory containing your AnalysisTemplate(s) in Git
        path: analysis-templates 

      destination:
        server: '{{server}}' # Inherited from the generator's 'server' field (the cluster API server URL)
        # The namespace on the target cluster where the AnalysisTemplate(s) should be deployed.
        # This should typically be the same namespace where your Argo Rollouts controller runs
        # or where your applications that use these templates are deployed.
        namespace: example-app # Example: Deploy templates to the same namespace as your Rollouts
      
      syncPolicy:
        automated:
          prune: true # Allow Argo CD to prune resources that are no longer in Git
          selfHeal: true # Allow Argo CD to automatically sync if drift is detected
        syncOptions:
        - CreateNamespace=true # Optional: Create the target namespace if it doesn't exist
